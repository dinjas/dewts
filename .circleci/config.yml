version: 2
jobs:
  build:
    parallelism: 1
    docker:
      - image: circleci/ruby:2.5.0-node-browsers
      - image: circleci/postgres:9.5-alpine

    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          keys:
            - dewts-{{ checksum "Gemfile.lock" }}
            - dewts-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: dewts-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      #- restore_cache:
      #    keys:
      #      - dewts-yarn-{{ checksum "yarn.lock" }}
      #      - dewts-yarn-

      #- run:
      #    name: Yarn Install
      #    command: yarn install

      # Store yarn / webpacker cache
      #- save_cache:
      #    key: dewts-yarn-{{ checksum "yarn.lock" }}
      #    paths:
      #      - ~/.yarn-cache

      - run:
          name: Database setup
          command: bin/rails db:create db:schema:load --trace

      - run:
          name: Setup CodeClimate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

  backend_tests:
    # Run rspec in parallel
    - type: shell
      command: |
        ./cc-test-reporter before-build
        bundle exec rspec --profile 10 \
                          --format RspecJunitFormatter \
                          --out test_results/rspec.xml \
                          --format progress \
                          $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
        ./cc-test-reporter format-coverage -t simplecov $CIRCLE_ARTIFACTS/coverage/.resultset.json
        ./cc-test-reporter upload-coverage

    # Save test results for timing analysis
    - store_test_results:
        path: test_results

workflows:
  version: 2

  commit:
    jobs:
      - build
      - backend-tests:
          requires:
            - build
      - upload-coverage:
          requires:
             - backend-tests
